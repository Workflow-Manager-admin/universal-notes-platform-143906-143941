{"is_source_file": true, "format": "Python", "description": "This file defines Flask route handlers for a notes application, including creating, retrieving, updating, deleting, and searching notes. It sets up the API endpoints with associated request handling logic, schema validation, and database interactions.", "external_files": ["../models", "../schemas", "../auth"], "external_methods": ["jwt_required", "Note.query.filter_by", "Note.query.filter", "Note.query.filter_by", "Note.query.filter_by", "Note.query.filter_by", "Note.query.filter", "Note.query.filter_by", "Note.query.filter_by", "db.session.add", "db.session.commit", "db.session.delete", "NoteOutSchema().dump", "pagination.paginate", "pagination.has_prev", "pagination.prev_num", "pagination.has_next", "pagination.next_num"], "published": ["blp", "get_pagination", "notes_query_base"], "classes": [{"name": "NotesListCreate", "description": "Handles creation and listing of notes with optional search, filter, and pagination."}, {"name": "NoteDetail", "description": "Handles retrieval, updating, and deletion of individual notes by ID."}], "methods": [{"name": "post(self, data)", "description": "Create a new note for the authenticated user.", "scope": "NotesListCreate", "scopeKind": "class"}, {"name": "get(self)", "description": "Retrieve a paginated list of notes, with optional search and filters.", "scope": "NotesListCreate", "scopeKind": "class"}, {"name": "get(self, note_id)", "description": "Retrieve details of a specific note by ID.", "scope": "NoteDetail", "scopeKind": "class"}, {"name": "put(self, update_data, note_id)", "description": "Update a specific note by ID.", "scope": "NoteDetail", "scopeKind": "class"}, {"name": "delete(self, note_id)", "description": "Delete a specific note by ID.", "scope": "NoteDetail", "scopeKind": "class"}, {"name": "get_pagination()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "notes_query_base(user_id)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Note.query.filter_by", "Note.query.filter", "Note.query.filter_by", "Note.query.filter_by", "Note.query.filter_by", "Note.query.filter", "Note.query.filter_by", "Note.query.filter_by", "db.session.add", "db.session.commit", "db.session.delete", "NoteOutSchema().dump", "pagination.paginate"], "search-terms": ["notes routes", "search by category and query", "pagination", "user notes API", "notes CRUD Flask"], "state": 2, "file_id": 11, "knowledge_revision": 24, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteDetail", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^class NoteDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesListCreate", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^class NotesListCreate(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^    def delete(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NoteDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "NotesListCreate", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^    def get(self, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, note_id)", "scope": "NoteDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get_pagination", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^def get_pagination():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "notes_query_base", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^def notes_query_base(user_id):$/", "language": "Python", "kind": "function", "signature": "(user_id)"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^    def post(self, data):$/", "language": "Python", "kind": "member", "signature": "(self, data)", "scope": "NotesListCreate", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/universal-notes-platform-143906-143941/notes_app_backend/app/routes/notes.py", "pattern": "/^    def put(self, update_data, note_id):$/", "language": "Python", "kind": "member", "signature": "(self, update_data, note_id)", "scope": "NoteDetail", "scopeKind": "class"}], "hash": "d6525f419f79a826ae74029c57f3b74c", "format-version": 4, "code-base-name": "notes_app_backend", "filename": "notes_app_backend/app/routes/notes.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"24": ""}]}